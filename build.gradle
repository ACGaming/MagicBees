buildscript {
    repositories {
        jcenter()
        maven { url = "http://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.2-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'

repositories {
    maven {
        name = "forestry"
        url = "http://maven.ic2.player.to/"
    }
    maven {
        name = "jei"
        url = "http://dvs1.progwml6.com/files/maven"
    }
    ivy {
        name = "Baubles"
        // To find the correct URL, download the mod from CurseForge,
        // and look in your browser's download history to find the URL it came from.
        artifactPattern "https://addons-origin.cursecdn.com/files/2341/549/[module]-[revision].[ext]"
    }
    ivy {
        name = "Botania"
        artifactPattern "http://botaniamod.net/files/deobf/[module] [revision]-deobf.[ext]"
    }
}

ext.version_mod = "${project.version_major}.${project.version_minor}.${project.version_rev}"
version = project.version_mc + "-" + project.version_mod
group= "magicbees" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "magicbees"

sourceCompatibility = targetCompatibility = JavaVersion.VERSION_1_8 // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = JavaVersion.VERSION_1_8
}

minecraft {
    version = project.version_mc + "-" + project.version_forge
	runDir = "run"
	replace '@VERSION@', project.version_mod
	replace '@MCVERSION@', project.version_mc
    mappings = mcp_mappings
}

dependencies {
    deobfCompile "net.sengir.forestry:forestry_${project.version_mc}:${project.version_forestry}:api"
    runtime "net.sengir.forestry:forestry_${project.version_mc}:${project.version_forestry}"
    compile name: 'Botania', version: "${project.version_botania}", ext: 'jar'
    compile name: 'Baubles', version: "${project.version_mc}-${project.version_baubles}", ext: 'jar'
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}
